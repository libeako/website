* this article is a rambling about programming, politics and the future
* in politics i am a libertarian, which is roughly equivalent to decentralization and to decreasing the state; i am an enthusiastic and sure advocate of this political direction and try to convince my human fellows about its worth; the convincing is difficult, people keep their minds closed in front of it, it is like telling to a religious person that god does not exist
	* link to (my libertarianism)
		# links-to internal kqgrxyhfgixllqucn
* in programming i am an "academian", by which i mean some software coding techniques originating from academia; i am an enthusiastic and sure advocate of these programming techniques and try to convince my software coder fellows about their worth; the convincing is difficult, people keep their minds closed in front of it, it is like telling to a religious person that god does not exist
	* more about that
		# links-to internal wdfyijgzinmnmzpnn
* an important one of these "academian" programming techniques is functional programming; "functional" is a programming paradigm that advocates the avoiding of mutable state [shortly "the state"]; instead of changing the data stored in a variable we create a new variable storing the new version of the data; often we create a patch [a difference compared to the old data] which together with the kept old data represents the new data; mutation of state is still allowed in functional programming, but only in a controlled way [mostly by returning effects by functions, hence having the effects tracked and checked by the static type system]
	* more about functional programming
		# links-to internal zxsbxwlppaypmpnnn
* as you could notice : in both politics and programming : i advocate to avoid state; they are different meanings of the word "state", but it is still funny that in 2 distinct, important sides of my life the boogeyman is denoted by the same word in the english language
* but now i realized that something real also connects libertarianism and functional programming; when i discovered the nicety of functional programming i was amazed by it, i realized that its advantages are tremendous; later i realized that the core concept of it is applicable and are similarly revolutionary in non-programming areas; for example in package management; accordingly: Nix [a functional one] is the best package manager in my opinion; it is a kind of tradition in the Unix world to build new operating system distributions on revolutionary package managers; Nix [a very revolutionary one] did not avoid this fate either; meet NixOS, an operating system which not only uses a functional package manager, but also applies the functional idea to operating system matters, unrelated to package management, NixOS is the best operating system in my opinion; i highly recommend you to consider these software pieces if you do not know them yet
* decentralization
	* but i still failed to see one big advantage of functional programming for a long time, despite it was obviously all around me : functional modelling is needed to run a program on a virtual computer distributed through trustless physical computers ["nodes"]; this is because in the absence of trust the nodes may not have the possibility to modify existing data; this brings us decentralization; as in functional programming, a distributed computation may modify state, but only in a controlled way, in this area it is known as "with consensus"
	* a good example of such decentralized program execution is crypto-money, popularly referred to with "blockchain technology"; the chain is a functional data structure, a linked list [or directed acyclic graph], the links in which are security-strengthened with cryptographic hashing
	* an other good example is decentralized version control; the most notable examples is 'git'
	* the field of instant messaging and social networking is very important now; so of course the decentralization heat is penetrating it too; one promising project is 'matrix', a key idea in which is building up incrementally a directed acyclic graph of messages
	* most of the internet also may [and in my opinion should and will] be based on decentralized foundation; notable projects in this field are IPFS, DFinity
