* in current type systems a type may depend on things; on what kind of things?; the more kinds of dependencies a type system permits, the higher the expressive power of it is; in this section i will walk step-by-step towards higher expressive power
* depending on
	* concrete types
		* "generics" in java and c# is well known; in it a type may depend on other type; that other type though must be a concrete type
	* type functions
		# links-to internal eyfagqcuwwajcnmtn
	* values
		# links-to internal vzdcxxawjkqmcakzn
* all these type system capabilities are simple, intuitive and hugely valuable; hence in the future all well-designed programming languages will provide them
