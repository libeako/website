\ id oqmgrzzqokpkuawg
* definition: the implementation code of a function is "point-free" iff it does not name and does not refer to its input
* example
	* instead of
		* increment x = add 1 x
	* using
		* increment = add 1
* advantages
	* the big ones
		* avoids bugs possibly caused by incorrect references to inputs
		* makes the structure of the code more appearant
	* also: often but not always: it is more short, readable, elegant
* often debate exists about whether to use point-free style
	* usually for those who understand it: the beauty of the pure structure is appealing
	* usually for those who do not understand it: it is senseless, annoying succinctness
	* with practise of functional programming quickly comes the ability to
		* understand point-free code
		* judge when to use it
	* my feeling from my practice is that usually the version that results in syntactically smaller code happens to be the practically better one
