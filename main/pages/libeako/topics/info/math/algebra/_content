* what is an "algebra"?
	* i do not know if a precise definition exists, Wikipedia [for example] seems to me to be inconsistent about it; i do not think that we need a precise definition; here my one follows
	* an algebra is a list of sets and functions over them
	* instead of sets we may use types
	* a set in an algebra is often said to be a "slot" or "base set" or "underlying set" or "carrier set"
	* the functions in an algebra
		* a functions of an algebra is often said to be
			* "operation"
				* this is the most used name
				* i strongly dislike this name because nothing operational is in it mathematically
			* "method"
				* software developers are used to use "method" for function that is related to a type
			* "feature"
				* this name choice i would like the most
			* "structure"
		* laws are mathematical statements about ["properties" of] the methods
			* i treat them as parts of the methods, because they can be parts of the types of the methods, with a sufficiently expressive type-system
			* the laws are often equalities
* an algebra is "abstract" iff we do not know what its base sets are
	* it is also said to be the "type" of its concrete versions
	* often it is said to be a "variety" of algebras
	* we could also say that it is a "class" of algebras
	* in software coding abstract algebras are usually represented by type interfaces ["by type classes"]
* 2-ary operations
	* notation: when an algebra has only 1 of them: i will use symbol ⊕ for its infix form
	* some famous predicates on them:
		* commutativity
			* for-all x y
				* x ⊕ y = y ⊕ x
		* associativity
			# links-to internal zupoyjhzjznssfcb
* homomorphism
	# links-to internal bizliksuerpywvfs
* free
	# links-to internal xvdouingmcyaahxq
* some classes of algebras
	* semigroup
		# links-to internal eovnsnrjngyuihhx
	* monoid
		# links-to internal cabjryjnnstdjmvb
	* "boolean algebra"
		# links-to internal agnyffsamrpgydql
