* higher level
	* an imperative program is conceptually a list of instructions, it describes what the machine does
	* a functional program is a set of defining mathematical equations, it is closer to the human coder's thinking
* in this section i shall use this simple example
	# links-to internal nxwwqhqhdzpldxms
* contains less dependency
	# links-to internal vmpbmlfwwxjiteqh
* enables secure libraries
	# links-to internal cfccueyjcvaohdzb
* makes laziness easy
	# links-to internal zugxbnomaikxpvco
* encourages
	* point-free coding style
		# links-to internal oqmgrzzqokpkuawg
* increases rum-time efficiency
	# links-to internal nmzlpnpnrsfmunrf
* outside of software coding
	# links-to internal vklgnrmtoqvxspkk
* some more advantage
	# links-to internal yrlxtbinihixywpt
* summary of the main advantages
	* less bug-prone
	* more modularity, more hierarchy
	* faster implementation, better maintainability
	* better readability
	* more run-time efficiency
	* more fun
* these benefits further strengthen each other, together yielding coding efficiency that programmers used to only the imperative culture can not even imagine
