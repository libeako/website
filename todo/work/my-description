design of software product unrelated to programming
	in this i have a strong attraction towards simplicity, mathematical sense, uniformity, independence between features
	even in products that seemingly do not have connection with math : these properties are important; designing the skeleton of a software product [the math behind it] is a key for long-term success of the product; and should be persued even against the will of a customer [the customer often does not know what he|she wants] [of course this should be done by convincing, discussion with the customer, instead of just going against his|her will, but has to be done : the discussion may not stop [the implementation of the product may not start] untill the customer and the more theoretically inclined product designer come to a common understanding]; i always had these feelings, but when i learned the incredible success story of the projects of the programming language "haskell", its compiler "ghc", its libraries, due to this design attitude : i became very strongly convinced
